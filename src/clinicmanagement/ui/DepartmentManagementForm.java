/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package clinicmanagement.ui;

import clinicmanagement.dao.DepartmentDAO;
import clinicmanagement.entities.Department;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nguye
 */
public class DepartmentManagementForm extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(DepartmentManagementForm.class.getName());
    private JFrame parentForm;
    /**
     * Creates new form PatientManagement
     */
    public DepartmentManagementForm(JFrame parent) {
        initComponents();
        this.parentForm = parent;
        loadDepartmentToTable();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
   
    private void loadDepartmentToTable() {
        List<Department> departmentList = DepartmentDAO.getAllDepartment(); 
        DefaultTableModel model = (DefaultTableModel) tblDepartments.getModel();
        model.setRowCount(0);  
        for (Department department : departmentList) {
            model.addRow(new Object[]{
                department.getDepartmentId(),
                department.getDepartmentName(),
                department.getDescription(),
                department.getConsultationFee(),
            });
        }
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnAddDepartment = new javax.swing.JButton();
        btnDeleteDepartment = new javax.swing.JButton();
        txtSearchDepartment = new javax.swing.JTextField();
        btnSearchDepartment = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDepartments = new javax.swing.JTable();
        btnRefreshTable = new javax.swing.JButton();
        btnReturnAdminForm = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Department management");

        btnAddDepartment.setText("Add department");
        btnAddDepartment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddDepartmentActionPerformed(evt);
            }
        });

        btnDeleteDepartment.setText("Delete department");
        btnDeleteDepartment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteDepartmentActionPerformed(evt);
            }
        });

        btnSearchDepartment.setText("Search department");
        btnSearchDepartment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchDepartmentActionPerformed(evt);
            }
        });

        tblDepartments.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblDepartments);

        btnRefreshTable.setText("Refresh table");
        btnRefreshTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshTableActionPerformed(evt);
            }
        });

        btnReturnAdminForm.setText("Return AdminForm");
        btnReturnAdminForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnAdminFormActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtSearchDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(btnSearchDepartment)
                                .addGap(50, 50, 50)
                                .addComponent(btnRefreshTable, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 722, Short.MAX_VALUE))
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAddDepartment, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                            .addComponent(btnDeleteDepartment, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                            .addComponent(btnReturnAdminForm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(46, 46, 46))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddDepartment)
                    .addComponent(txtSearchDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchDepartment)
                    .addComponent(btnRefreshTable))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(btnDeleteDepartment)
                        .addGap(31, 31, 31)
                        .addComponent(btnReturnAdminForm)))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddDepartmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddDepartmentActionPerformed
        // TODO add your handling code here:
        AddDepartmentDialog addDepartmentDialog = new AddDepartmentDialog(this, true);
        addDepartmentDialog.setVisible(true);
        loadDepartmentToTable();
    }//GEN-LAST:event_btnAddDepartmentActionPerformed

    private void btnDeleteDepartmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteDepartmentActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblDepartments.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một khoa để xóa.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            return; 
        } 
        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa khoa này không?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
        try {         
            int departmentId = Integer.parseInt(tblDepartments.getValueAt(selectedRow, 0).toString());
            DepartmentDAO doctorDAO = new DepartmentDAO();
            boolean isDeleted = doctorDAO.deleteDepartment(departmentId);  
 
            if (isDeleted) {
                
                DefaultTableModel model = (DefaultTableModel) tblDepartments.getModel();
                model.removeRow(selectedRow);
                JOptionPane.showMessageDialog(this, "Xóa khoa thành công!");
            } else {
               
                JOptionPane.showMessageDialog(this, "Xóa khoa thất bại. Vui lòng thử lại.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
          
            JOptionPane.showMessageDialog(this, "ID của khoa không hợp lệ.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            System.err.println("Lỗi khi parse ID bác sĩ: " + e.getMessage());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Đã có lỗi xảy ra: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
            System.err.println("Lỗi khi xóa bác sĩ: " + e.getMessage());
        }
    }
    }//GEN-LAST:event_btnDeleteDepartmentActionPerformed

    private void populateDepartmentTable(List<Department> departmentList) {
        DefaultTableModel model = (DefaultTableModel) tblDepartments.getModel(); 
        model.setRowCount(0);
        for (Department department : departmentList) {
            Object[] row = new Object[]{
                department.getDepartmentId(),
                department.getDepartmentName(),
                department.getDescription(),
                department.getConsultationFee(),   
            };
            model.addRow(row);
        }
    }
    private void btnSearchDepartmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchDepartmentActionPerformed
        // TODO add your handling code here:
        String searchTerm = txtSearchDepartment.getText().trim();
        DepartmentDAO departmentDAO = new DepartmentDAO();
        if (searchTerm.isEmpty()) {
            loadDepartmentToTable();
            return;
        }
        List<Department> searchResult = departmentDAO.searchByName(searchTerm);
        populateDepartmentTable(searchResult);
        if(searchResult.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Không tìm thấy khoa nào phù hợp với từ khóa.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            loadDepartmentToTable();
        }
        else {
            populateDepartmentTable(searchResult);
        } 
    }//GEN-LAST:event_btnSearchDepartmentActionPerformed

    private void btnRefreshTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshTableActionPerformed
        // TODO add your handling code here:
        txtSearchDepartment.setText(""); 
        loadDepartmentToTable(); 
    }//GEN-LAST:event_btnRefreshTableActionPerformed

    private void btnReturnAdminFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnAdminFormActionPerformed
        // TODO add your handling code here:
        if(parentForm != null)
        {
            parentForm.setVisible(true);
        }
        this.dispose();
    }//GEN-LAST:event_btnReturnAdminFormActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
       
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddDepartment;
    private javax.swing.JButton btnDeleteDepartment;
    private javax.swing.JButton btnRefreshTable;
    private javax.swing.JButton btnReturnAdminForm;
    private javax.swing.JButton btnSearchDepartment;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDepartments;
    private javax.swing.JTextField txtSearchDepartment;
    // End of variables declaration//GEN-END:variables
}
